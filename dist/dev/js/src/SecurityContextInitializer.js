"use strict";
var SecurityContext_1 = require('./SecurityContext');
var SecurityContextTokenInitializer_1 = require('./SecurityContextTokenInitializer');
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SecurityContextInitializer;
var SecurityContextInitializer = (function () {
    function SecurityContextInitializer() {
    }
    SecurityContextInitializer.Create = function (typeOfSecurityContextInitializer) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var securityContextInitializer = new typeOfSecurityContextInitializer(args);
        var castedSecurityContextInitializer = securityContextInitializer;
        return castedSecurityContextInitializer;
    };
    SecurityContextInitializer.InitializeWithTokens = function (tokens) {
        var securityContextTokenInitializer = SecurityContextInitializer.Create(SecurityContextTokenInitializer_1.default, tokens);
        SecurityContext_1.default.Current.Init(securityContextTokenInitializer);
        return SecurityContext_1.default.Current;
    };
    SecurityContextInitializer.InitializeWithEncodedTokens = function (encodedTokens) {
        var securityContextTokenInitializer = SecurityContextInitializer.Create(SecurityContextTokenInitializer_1.default, encodedTokens);
        SecurityContext_1.default.Current.Init(securityContextTokenInitializer);
        return SecurityContext_1.default.Current;
    };
    return SecurityContextInitializer;
}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9TZWN1cml0eUNvbnRleHRJbml0aWFsaXplci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsZ0NBQTRCLG1CQUFtQixDQUFDLENBQUE7QUFHaEQsZ0RBQTRDLG1DQUFtQyxDQUFDLENBQUE7QUFFaEY7a0JBQWUsMEJBQTBCLENBQUM7QUFFMUM7SUFBQTtJQXNCQSxDQUFDO0lBcEJpQixpQ0FBTSxHQUFwQixVQUE0RCxnQ0FBcUQ7UUFBRSxjQUFPO2FBQVAsV0FBTyxDQUFQLHNCQUFPLENBQVAsSUFBTztZQUFQLDZCQUFPOztRQUV0SCxJQUFJLDBCQUEwQixHQUFHLElBQUksZ0NBQWdDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUUsSUFBSSxnQ0FBZ0MsR0FBTSwwQkFBMEIsQ0FBQztRQUNyRSxNQUFNLENBQUMsZ0NBQWdDLENBQUM7SUFDNUMsQ0FBQztJQUVhLCtDQUFvQixHQUFsQyxVQUFtQyxNQUFhO1FBRTVDLElBQUksK0JBQStCLEdBQUcsMEJBQTBCLENBQUMsTUFBTSxDQUFDLHlDQUErQixFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ2pILHlCQUFlLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1FBQzlELE1BQU0sQ0FBQyx5QkFBZSxDQUFDLE9BQU8sQ0FBQztJQUNuQyxDQUFDO0lBRWEsc0RBQTJCLEdBQXpDLFVBQTBDLGFBQXVCO1FBRTdELElBQUksK0JBQStCLEdBQUcsMEJBQTBCLENBQUMsTUFBTSxDQUFDLHlDQUErQixFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ3hILHlCQUFlLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1FBQzlELE1BQU0sQ0FBQyx5QkFBZSxDQUFDLE9BQU8sQ0FBQztJQUNuQyxDQUFDO0lBQ0wsaUNBQUM7QUFBRCxDQXRCQSxBQXNCQyxJQUFBIiwiZmlsZSI6InNyYy9TZWN1cml0eUNvbnRleHRJbml0aWFsaXplci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZWN1cml0eUNvbnRleHQgZnJvbSAnLi9TZWN1cml0eUNvbnRleHQnO1xyXG5pbXBvcnQgSVNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyIGZyb20gJy4vSVNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyJztcclxuXHJcbmltcG9ydCBTZWN1cml0eUNvbnRleHRUb2tlbkluaXRpYWxpemVyIGZyb20gJy4vU2VjdXJpdHlDb250ZXh0VG9rZW5Jbml0aWFsaXplcic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTZWN1cml0eUNvbnRleHRJbml0aWFsaXplcjtcclxuXHJcbmFic3RyYWN0IGNsYXNzIFNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyXHJcbntcclxuICAgIHB1YmxpYyBzdGF0aWMgQ3JlYXRlPFQgZXh0ZW5kcyBJU2VjdXJpdHlDb250ZXh0SW5pdGlhbGl6ZXI+KHR5cGVPZlNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyIDp7IG5ldyguLi5hcmdzKTogVCB9LCAuLi5hcmdzKTogVFxyXG4gICAge1xyXG4gICAgICAgIGxldCBzZWN1cml0eUNvbnRleHRJbml0aWFsaXplciA9IG5ldyB0eXBlT2ZTZWN1cml0eUNvbnRleHRJbml0aWFsaXplcihhcmdzKTtcclxuICAgICAgICBsZXQgY2FzdGVkU2VjdXJpdHlDb250ZXh0SW5pdGlhbGl6ZXIgPSA8VD5zZWN1cml0eUNvbnRleHRJbml0aWFsaXplcjtcclxuICAgICAgICByZXR1cm4gY2FzdGVkU2VjdXJpdHlDb250ZXh0SW5pdGlhbGl6ZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHB1YmxpYyBzdGF0aWMgSW5pdGlhbGl6ZVdpdGhUb2tlbnModG9rZW5zOiBhbnlbXSk6IFNlY3VyaXR5Q29udGV4dFxyXG4gICAge1xyXG4gICAgICAgIGxldCBzZWN1cml0eUNvbnRleHRUb2tlbkluaXRpYWxpemVyID0gU2VjdXJpdHlDb250ZXh0SW5pdGlhbGl6ZXIuQ3JlYXRlKFNlY3VyaXR5Q29udGV4dFRva2VuSW5pdGlhbGl6ZXIsIHRva2Vucyk7XHJcbiAgICAgICAgU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuSW5pdChzZWN1cml0eUNvbnRleHRUb2tlbkluaXRpYWxpemVyKTtcclxuICAgICAgICByZXR1cm4gU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHB1YmxpYyBzdGF0aWMgSW5pdGlhbGl6ZVdpdGhFbmNvZGVkVG9rZW5zKGVuY29kZWRUb2tlbnM6IHN0cmluZ1tdKTogU2VjdXJpdHlDb250ZXh0XHJcbiAgICB7XHJcbiAgICAgICAgbGV0IHNlY3VyaXR5Q29udGV4dFRva2VuSW5pdGlhbGl6ZXIgPSBTZWN1cml0eUNvbnRleHRJbml0aWFsaXplci5DcmVhdGUoU2VjdXJpdHlDb250ZXh0VG9rZW5Jbml0aWFsaXplciwgZW5jb2RlZFRva2Vucyk7XHJcbiAgICAgICAgU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuSW5pdChzZWN1cml0eUNvbnRleHRUb2tlbkluaXRpYWxpemVyKTtcclxuICAgICAgICByZXR1cm4gU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQ7XHJcbiAgICB9XHJcbn1cclxuIl19
