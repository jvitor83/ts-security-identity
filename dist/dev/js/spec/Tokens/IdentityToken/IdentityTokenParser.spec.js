/// <reference path='../../../../typings/main.d.ts' />
(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(["require", "exports", '../../../src/Tokens/Parsers/TokenParser'], factory);
    }
})(function (require, exports) {
    "use strict";
    var TokenParser_1 = require('../../../src/Tokens/Parsers/TokenParser');
    describe('IdentityTokenParser', function () {
        var token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJpc3MiOiJodHRwczovL3BqbXRzdHMvIiwiYXVkIjoiMjM4MCIsImV4cCI6MTQ2MTg4MjkzNSwibmJmIjoxNDYxODgyNjM1LCJub25jZSI6IjEyMjMwMjA2NTU5NDkyMDgiLCJpYXQiOjE0NjE4ODI2MzUsImF0X2hhc2giOiIzeV9iSi1oZEZiMjE3VHNpQUVpVnZ3IiwiY19oYXNoIjoibGhMRDFOaTNkcms0aEJKYXBQRUpaQSIsInNpZCI6IjNkMGQzNWYxNGFjYWQ3MzEyM2E2Y2FmMGU5NTY5NGIzIiwic3ViIjoiMTY4NDMiLCJhdXRoX3RpbWUiOjE0NjExNjQ5MzIsImlkcCI6Imlkc3J2IiwiYW1yIjpbInBhc3N3b3JkIl19.hS9vFGcUq6j3CBRsUDm2RG0zwyNbdRijN1L_f7EmX4d5o8Wxh9RaWxPmYUSAGt211lrnp1W0zm7HfWqOu3szJnhCWKfX_P9CYuc-3NyWXxL9iMZM07lzweunJeYrWM99KCWT9il_ptR3cvNBEZPBBHBmzQ5EPbHqMga35U3U0rHTuC1134qvDFE-2YoGyNXxP5KD-pyVlx0hPXOsfv9xYfKr9C31eEMqyyavZWpmiH8Ywz1vlJTMdX6Y9Gm7599Ojqe66mRAaDX7_rf8kecgvkSZD0uozHPGIX-Y8ORPS83AHXTOFOAXoO3hvxnJJ6iN1oVJSzWVsI59VFbvMIawCw";
        // beforeEach(() => {
        // });
        it('should parse a token', function () {
            var tokenParser = new TokenParser_1.TokenParser(token);
            var tokenParsed = tokenParser.Parse();
            //let idp = tokenDecoded.cabecalhoObject.typ;
            var sid = tokenParsed.contentJSON.sid;
            expect(sid).toBe("3d0d35f14acad73123a6caf0e95694b3");
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwZWMvVG9rZW5zL0lkZW50aXR5VG9rZW4vSWRlbnRpdHlUb2tlblBhcnNlci5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDs7Ozs7Ozs7OztJQUV0RCw0QkFBMEIseUNBQXlDLENBQUMsQ0FBQTtJQUVwRSxRQUFRLENBQUMscUJBQXFCLEVBQUU7UUFDNUIsSUFBSSxLQUFLLEdBQVUsMDJCQUEwMkIsQ0FBQztRQUVoNEIscUJBQXFCO1FBQ3JCLE1BQU07UUFFTixFQUFFLENBQUMsc0JBQXNCLEVBQUU7WUFFekIsSUFBSSxXQUFXLEdBQUcsSUFBSSx5QkFBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pDLElBQUksV0FBVyxHQUFHLFdBQVcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUV0Qyw2Q0FBNkM7WUFDN0MsSUFBSSxHQUFHLEdBQUcsV0FBVyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUM7WUFFdEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO1FBRXJELENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoic3BlYy9Ub2tlbnMvSWRlbnRpdHlUb2tlbi9JZGVudGl0eVRva2VuUGFyc2VyLnNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPScuLi8uLi8uLi8uLi90eXBpbmdzL21haW4uZC50cycgLz5cclxuXHJcbmltcG9ydCB7VG9rZW5QYXJzZXJ9IGZyb20gJy4uLy4uLy4uL3NyYy9Ub2tlbnMvUGFyc2Vycy9Ub2tlblBhcnNlcic7XHJcblxyXG5kZXNjcmliZSgnSWRlbnRpdHlUb2tlblBhcnNlcicsICgpID0+IHtcclxuICAgIGxldCB0b2tlbjpzdHJpbmcgPSBcImV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSlNVekkxTmlJc0ltdHBaQ0k2SW1FemNrMVZaMDFHZGpsMFVHTnNUR0UyZVVZemVrRnJabkYxUlNJc0luZzFkQ0k2SW1FemNrMVZaMDFHZGpsMFVHTnNUR0UyZVVZemVrRnJabkYxUlNKOS5leUpwYzNNaU9pSm9kSFJ3Y3pvdkwzQnFiWFJ6ZEhNdklpd2lZWFZrSWpvaU1qTTRNQ0lzSW1WNGNDSTZNVFEyTVRnNE1qa3pOU3dpYm1KbUlqb3hORFl4T0RneU5qTTFMQ0p1YjI1alpTSTZJakV5TWpNd01qQTJOVFU1TkRreU1EZ2lMQ0pwWVhRaU9qRTBOakU0T0RJMk16VXNJbUYwWDJoaGMyZ2lPaUl6ZVY5aVNpMW9aRVppTWpFM1ZITnBRVVZwVm5aM0lpd2lZMTlvWVhOb0lqb2liR2hNUkRGT2FUTmtjbXMwYUVKS1lYQlFSVXBhUVNJc0luTnBaQ0k2SWpOa01HUXpOV1l4TkdGallXUTNNekV5TTJFMlkyRm1NR1U1TlRZNU5HSXpJaXdpYzNWaUlqb2lNVFk0TkRNaUxDSmhkWFJvWDNScGJXVWlPakUwTmpFeE5qUTVNeklzSW1sa2NDSTZJbWxrYzNKMklpd2lZVzF5SWpwYkluQmhjM04zYjNKa0lsMTkuaFM5dkZHY1VxNmozQ0JSc1VEbTJSRzB6d3lOYmRSaWpOMUxfZjdFbVg0ZDVvOFd4aDlSYVd4UG1ZVVNBR3QyMTFscm5wMVcwem03SGZXcU91M3N6Sm5oQ1dLZlhfUDlDWXVjLTNOeVdYeEw5aU1aTTA3bHp3ZXVuSmVZcldNOTlLQ1dUOWlsX3B0UjNjdk5CRVpQQkJIQm16UTVFUGJIcU1nYTM1VTNVMHJIVHVDMTEzNHF2REZFLTJZb0d5Tlh4UDVLRC1weVZseDBoUFhPc2Z2OXhZZktyOUMzMWVFTXF5eWF2WldwbWlIOFl3ejF2bEpUTWRYNlk5R203NTk5T2pxZTY2bVJBYURYN19yZjhrZWNndmtTWkQwdW96SFBHSVgtWThPUlBTODNBSFhUT0ZPQVhvTzNodnhuSko2aU4xb1ZKU3pXVnNJNTlWRmJ2TUlhd0N3XCI7XHJcblxyXG4gIC8vIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gIC8vIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIHBhcnNlIGEgdG9rZW4nLCAoKSA9PiB7XHJcbiAgICBcclxuICAgIGxldCB0b2tlblBhcnNlciA9IG5ldyBUb2tlblBhcnNlcih0b2tlbik7XHJcbiAgICBsZXQgdG9rZW5QYXJzZWQgPSB0b2tlblBhcnNlci5QYXJzZSgpO1xyXG4gICAgXHJcbiAgICAvL2xldCBpZHAgPSB0b2tlbkRlY29kZWQuY2FiZWNhbGhvT2JqZWN0LnR5cDtcclxuICAgIGxldCBzaWQgPSB0b2tlblBhcnNlZC5jb250ZW50SlNPTi5zaWQ7XHJcbiAgICBcclxuICAgIGV4cGVjdChzaWQpLnRvQmUoXCIzZDBkMzVmMTRhY2FkNzMxMjNhNmNhZjBlOTU2OTRiM1wiKTtcclxuICAgIFxyXG4gICAgfSk7XHJcbn0pO1xyXG4iXX0=
