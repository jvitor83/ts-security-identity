/// <reference path='../../../../typings/main.d.ts' />
System.register(['../../../src/Tokens/Parsers/TokenParser'], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var TokenParser_1;
    return {
        setters:[
            function (TokenParser_1_1) {
                TokenParser_1 = TokenParser_1_1;
            }],
        execute: function() {
            describe('IdentityTokenParser', function () {
                var token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJpc3MiOiJodHRwczovL3BqbXRzdHMvIiwiYXVkIjoiMjM4MCIsImV4cCI6MTQ2MTg4MjkzNSwibmJmIjoxNDYxODgyNjM1LCJub25jZSI6IjEyMjMwMjA2NTU5NDkyMDgiLCJpYXQiOjE0NjE4ODI2MzUsImF0X2hhc2giOiIzeV9iSi1oZEZiMjE3VHNpQUVpVnZ3IiwiY19oYXNoIjoibGhMRDFOaTNkcms0aEJKYXBQRUpaQSIsInNpZCI6IjNkMGQzNWYxNGFjYWQ3MzEyM2E2Y2FmMGU5NTY5NGIzIiwic3ViIjoiMTY4NDMiLCJhdXRoX3RpbWUiOjE0NjExNjQ5MzIsImlkcCI6Imlkc3J2IiwiYW1yIjpbInBhc3N3b3JkIl19.hS9vFGcUq6j3CBRsUDm2RG0zwyNbdRijN1L_f7EmX4d5o8Wxh9RaWxPmYUSAGt211lrnp1W0zm7HfWqOu3szJnhCWKfX_P9CYuc-3NyWXxL9iMZM07lzweunJeYrWM99KCWT9il_ptR3cvNBEZPBBHBmzQ5EPbHqMga35U3U0rHTuC1134qvDFE-2YoGyNXxP5KD-pyVlx0hPXOsfv9xYfKr9C31eEMqyyavZWpmiH8Ywz1vlJTMdX6Y9Gm7599Ojqe66mRAaDX7_rf8kecgvkSZD0uozHPGIX-Y8ORPS83AHXTOFOAXoO3hvxnJJ6iN1oVJSzWVsI59VFbvMIawCw";
                // beforeEach(() => {
                // });
                it('should parse a token', function () {
                    var tokenParser = new TokenParser_1.default(token);
                    var tokenParsed = tokenParser.Parse();
                    //let idp = tokenDecoded.cabecalhoObject.typ;
                    var sid = tokenParsed.contentJSON.sid;
                    expect(sid).toBe("3d0d35f14acad73123a6caf0e95694b3");
                });
            });
        }
    }
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwZWMvVG9rZW5zL0lkZW50aXR5VG9rZW4vSWRlbnRpdHlUb2tlblBhcnNlci5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNEQUFzRDs7Ozs7Ozs7Ozs7WUFJdEQsUUFBUSxDQUFDLHFCQUFxQixFQUFFO2dCQUM1QixJQUFJLEtBQUssR0FBVSwwMkJBQTAyQixDQUFDO2dCQUVoNEIscUJBQXFCO2dCQUNyQixNQUFNO2dCQUVOLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRTtvQkFFekIsSUFBSSxXQUFXLEdBQUcsSUFBSSxxQkFBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO29CQUN6QyxJQUFJLFdBQVcsR0FBRyxXQUFXLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBRXRDLDZDQUE2QztvQkFDN0MsSUFBSSxHQUFHLEdBQUcsV0FBVyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUM7b0JBRXRDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsa0NBQWtDLENBQUMsQ0FBQztnQkFFckQsQ0FBQyxDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJzcGVjL1Rva2Vucy9JZGVudGl0eVRva2VuL0lkZW50aXR5VG9rZW5QYXJzZXIuc3BlYy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9Jy4uLy4uLy4uLy4uL3R5cGluZ3MvbWFpbi5kLnRzJyAvPlxyXG5cclxuaW1wb3J0IFRva2VuUGFyc2VyIGZyb20gJy4uLy4uLy4uL3NyYy9Ub2tlbnMvUGFyc2Vycy9Ub2tlblBhcnNlcic7XHJcblxyXG5kZXNjcmliZSgnSWRlbnRpdHlUb2tlblBhcnNlcicsICgpID0+IHtcclxuICAgIGxldCB0b2tlbjpzdHJpbmcgPSBcImV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSlNVekkxTmlJc0ltdHBaQ0k2SW1FemNrMVZaMDFHZGpsMFVHTnNUR0UyZVVZemVrRnJabkYxUlNJc0luZzFkQ0k2SW1FemNrMVZaMDFHZGpsMFVHTnNUR0UyZVVZemVrRnJabkYxUlNKOS5leUpwYzNNaU9pSm9kSFJ3Y3pvdkwzQnFiWFJ6ZEhNdklpd2lZWFZrSWpvaU1qTTRNQ0lzSW1WNGNDSTZNVFEyTVRnNE1qa3pOU3dpYm1KbUlqb3hORFl4T0RneU5qTTFMQ0p1YjI1alpTSTZJakV5TWpNd01qQTJOVFU1TkRreU1EZ2lMQ0pwWVhRaU9qRTBOakU0T0RJMk16VXNJbUYwWDJoaGMyZ2lPaUl6ZVY5aVNpMW9aRVppTWpFM1ZITnBRVVZwVm5aM0lpd2lZMTlvWVhOb0lqb2liR2hNUkRGT2FUTmtjbXMwYUVKS1lYQlFSVXBhUVNJc0luTnBaQ0k2SWpOa01HUXpOV1l4TkdGallXUTNNekV5TTJFMlkyRm1NR1U1TlRZNU5HSXpJaXdpYzNWaUlqb2lNVFk0TkRNaUxDSmhkWFJvWDNScGJXVWlPakUwTmpFeE5qUTVNeklzSW1sa2NDSTZJbWxrYzNKMklpd2lZVzF5SWpwYkluQmhjM04zYjNKa0lsMTkuaFM5dkZHY1VxNmozQ0JSc1VEbTJSRzB6d3lOYmRSaWpOMUxfZjdFbVg0ZDVvOFd4aDlSYVd4UG1ZVVNBR3QyMTFscm5wMVcwem03SGZXcU91M3N6Sm5oQ1dLZlhfUDlDWXVjLTNOeVdYeEw5aU1aTTA3bHp3ZXVuSmVZcldNOTlLQ1dUOWlsX3B0UjNjdk5CRVpQQkJIQm16UTVFUGJIcU1nYTM1VTNVMHJIVHVDMTEzNHF2REZFLTJZb0d5Tlh4UDVLRC1weVZseDBoUFhPc2Z2OXhZZktyOUMzMWVFTXF5eWF2WldwbWlIOFl3ejF2bEpUTWRYNlk5R203NTk5T2pxZTY2bVJBYURYN19yZjhrZWNndmtTWkQwdW96SFBHSVgtWThPUlBTODNBSFhUT0ZPQVhvTzNodnhuSko2aU4xb1ZKU3pXVnNJNTlWRmJ2TUlhd0N3XCI7XHJcblxyXG4gIC8vIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gIC8vIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIHBhcnNlIGEgdG9rZW4nLCAoKSA9PiB7XHJcbiAgICBcclxuICAgIGxldCB0b2tlblBhcnNlciA9IG5ldyBUb2tlblBhcnNlcih0b2tlbik7XHJcbiAgICBsZXQgdG9rZW5QYXJzZWQgPSB0b2tlblBhcnNlci5QYXJzZSgpO1xyXG4gICAgXHJcbiAgICAvL2xldCBpZHAgPSB0b2tlbkRlY29kZWQuY2FiZWNhbGhvT2JqZWN0LnR5cDtcclxuICAgIGxldCBzaWQgPSB0b2tlblBhcnNlZC5jb250ZW50SlNPTi5zaWQ7XHJcbiAgICBcclxuICAgIGV4cGVjdChzaWQpLnRvQmUoXCIzZDBkMzVmMTRhY2FkNzMxMjNhNmNhZjBlOTU2OTRiM1wiKTtcclxuICAgIFxyXG4gICAgfSk7XHJcbn0pO1xyXG4iXX0=
