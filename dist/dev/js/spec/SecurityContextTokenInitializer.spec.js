(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(["require", "exports", '../src/SecurityContext', '../src/SecurityContextTokenInitializer'], factory);
    }
})(function (require, exports) {
    "use strict";
    /// <reference path='../../typings/main.d.ts' />
    var SecurityContext_1 = require('../src/SecurityContext');
    var SecurityContextTokenInitializer_1 = require('../src/SecurityContextTokenInitializer');
    describe('SecurityContextTokenInitializer', function () {
        var accessToken = "{\"iss\":\"https://pjmtsts/\",\"aud\":\"https://pjmtsts/resources\",\"exp\":1462403582,\"nbf\":1462399982,\"client_id\":\"2380\",\"scope\":[\"openid\",\"profile\",\"pjmt_profile\",\"email\",\"permissao_2380\"],\"sub\":\"16843\",\"auth_time\":1462397042,\"idp\":\"idsrv\",\"permissao|2380:Dashboard\":\"Acesso\",\"permissao|2380:Dashboard.Graficos\":\"Acesso\",\"permissao|2380:Dashboard.Graficos.Diversos\":\"Acesso\",\"permissao|2380:Dashboard.Graficos.Sobre\":\"Acesso\",\"permissao|2380:Dashboard.Relatorio.RelatorioCriacao\":\"Acesso\",\"permissao|2380:Dashboard.Relatorios.RelatorioAcessos\":[\"Acesso\",\"Alterar\",\"Excluir\",\"Novo\"],\"permissao|2380:Home\":\"Acesso\",\"permissao|2380:Noticias\":\"Acesso\",\"permissao|2380:Relatorios\":\"Acesso\",\"amr\":[\"password\"]}";
        beforeEach(function () {
            SecurityContext_1.SecurityContext.Reset();
        });
        it('Init should instantiate a User', function () {
            var json = JSON.parse(accessToken);
            var securityContextInitializer = new SecurityContextTokenInitializer_1.SecurityContextTokenInitializer(json);
            SecurityContext_1.SecurityContext.Current.Init(securityContextInitializer);
            //SecurityContext.Current.User.permissoes.filter((permissao) => permissao.permissoes.some((perm) => perm == ""));
            //let name = SecurityContext.Current.Principal.Identity.Claims.filter((claim) => claim.key === "name")[0].value;
            expect(SecurityContext_1.SecurityContext.Current.Principal).toBeDefined();
        });
        it('Init should have a User authenticated', function () {
            var json = JSON.parse(accessToken);
            var securityContextInitializer = new SecurityContextTokenInitializer_1.SecurityContextTokenInitializer(json);
            SecurityContext_1.SecurityContext.Current.Init(securityContextInitializer);
            //SecurityContext.Current.User.permissoes.filter((permissao) => permissao.permissoes.some((perm) => perm == ""));
            expect(SecurityContext_1.SecurityContext.Current.Principal.IsAuthenticated).toBeTruthy();
        });
        it('User should have client_id', function () {
            var json = JSON.parse(accessToken);
            var securityContextInitializer = new SecurityContextTokenInitializer_1.SecurityContextTokenInitializer(json);
            SecurityContext_1.SecurityContext.Current.Init(securityContextInitializer);
            var client_id = SecurityContext_1.SecurityContext.Current.Principal.Identity.findFirst('client_id');
            expect(client_id).toBe('2380');
        });
        it('User should not be authenticated', function () {
            expect(SecurityContext_1.SecurityContext.Current.Principal.IsAuthenticated).toBe(false);
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwZWMvU2VjdXJpdHlDb250ZXh0VG9rZW5Jbml0aWFsaXplci5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztJQUFBLGdEQUFnRDtJQUNoRCxnQ0FBOEIsd0JBQXdCLENBQUMsQ0FBQTtJQUV2RCxnREFBOEMsd0NBQXdDLENBQUMsQ0FBQTtJQUV2RixRQUFRLENBQUMsaUNBQWlDLEVBQUU7UUFFeEMsSUFBTSxXQUFXLEdBQVUsK3dCQUEyckIsQ0FBQztRQUV6dEIsVUFBVSxDQUFDO1lBQ1AsaUNBQWUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRTtZQUVqQyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ25DLElBQUksMEJBQTBCLEdBQUcsSUFBSSxpRUFBK0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMzRSxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUV6RCxpSEFBaUg7WUFFakgsZ0hBQWdIO1lBRWhILE1BQU0sQ0FBQyxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUU1RCxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyx1Q0FBdUMsRUFBRTtZQUV4QyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ25DLElBQUksMEJBQTBCLEdBQUcsSUFBSSxpRUFBK0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMzRSxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUV6RCxpSEFBaUg7WUFFakgsTUFBTSxDQUFDLGlDQUFlLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUUzRSxDQUFDLENBQUMsQ0FBQztRQUdILEVBQUUsQ0FBQyw0QkFBNEIsRUFBRTtZQUU3QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ25DLElBQUksMEJBQTBCLEdBQUcsSUFBSSxpRUFBK0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUUzRSxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUV6RCxJQUFJLFNBQVMsR0FBYyxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsUUFBUyxDQUFDLFNBQVMsQ0FBUyxXQUFXLENBQUMsQ0FBQztZQUV0RyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRW5DLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLGtDQUFrQyxFQUFFO1lBRW5DLE1BQU0sQ0FBQyxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTFFLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoic3BlYy9TZWN1cml0eUNvbnRleHRUb2tlbkluaXRpYWxpemVyLnNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPScuLi8uLi90eXBpbmdzL21haW4uZC50cycgLz5cclxuaW1wb3J0IHtTZWN1cml0eUNvbnRleHR9IGZyb20gJy4uL3NyYy9TZWN1cml0eUNvbnRleHQnO1xyXG5pbXBvcnQge0lkZW50aXR5fSBmcm9tICcuLi9zcmMvSWRlbnRpdGllcy9JZGVudGl0eSc7XHJcbmltcG9ydCB7U2VjdXJpdHlDb250ZXh0VG9rZW5Jbml0aWFsaXplcn0gZnJvbSAnLi4vc3JjL1NlY3VyaXR5Q29udGV4dFRva2VuSW5pdGlhbGl6ZXInO1xyXG5cclxuZGVzY3JpYmUoJ1NlY3VyaXR5Q29udGV4dFRva2VuSW5pdGlhbGl6ZXInLCAoKSA9PiB7XHJcbiAgICBcclxuICAgIGNvbnN0IGFjY2Vzc1Rva2VuOnN0cmluZyA9IGB7XCJpc3NcIjpcImh0dHBzOi8vcGptdHN0cy9cIixcImF1ZFwiOlwiaHR0cHM6Ly9wam10c3RzL3Jlc291cmNlc1wiLFwiZXhwXCI6MTQ2MjQwMzU4MixcIm5iZlwiOjE0NjIzOTk5ODIsXCJjbGllbnRfaWRcIjpcIjIzODBcIixcInNjb3BlXCI6W1wib3BlbmlkXCIsXCJwcm9maWxlXCIsXCJwam10X3Byb2ZpbGVcIixcImVtYWlsXCIsXCJwZXJtaXNzYW9fMjM4MFwiXSxcInN1YlwiOlwiMTY4NDNcIixcImF1dGhfdGltZVwiOjE0NjIzOTcwNDIsXCJpZHBcIjpcImlkc3J2XCIsXCJwZXJtaXNzYW98MjM4MDpEYXNoYm9hcmRcIjpcIkFjZXNzb1wiLFwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkLkdyYWZpY29zXCI6XCJBY2Vzc29cIixcInBlcm1pc3Nhb3wyMzgwOkRhc2hib2FyZC5HcmFmaWNvcy5EaXZlcnNvc1wiOlwiQWNlc3NvXCIsXCJwZXJtaXNzYW98MjM4MDpEYXNoYm9hcmQuR3JhZmljb3MuU29icmVcIjpcIkFjZXNzb1wiLFwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkLlJlbGF0b3Jpby5SZWxhdG9yaW9DcmlhY2FvXCI6XCJBY2Vzc29cIixcInBlcm1pc3Nhb3wyMzgwOkRhc2hib2FyZC5SZWxhdG9yaW9zLlJlbGF0b3Jpb0FjZXNzb3NcIjpbXCJBY2Vzc29cIixcIkFsdGVyYXJcIixcIkV4Y2x1aXJcIixcIk5vdm9cIl0sXCJwZXJtaXNzYW98MjM4MDpIb21lXCI6XCJBY2Vzc29cIixcInBlcm1pc3Nhb3wyMzgwOk5vdGljaWFzXCI6XCJBY2Vzc29cIixcInBlcm1pc3Nhb3wyMzgwOlJlbGF0b3Jpb3NcIjpcIkFjZXNzb1wiLFwiYW1yXCI6W1wicGFzc3dvcmRcIl19YDtcclxuICAgIFxyXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gICAgICBTZWN1cml0eUNvbnRleHQuUmVzZXQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGl0KCdJbml0IHNob3VsZCBpbnN0YW50aWF0ZSBhIFVzZXInLCAoKSA9PiB7XHJcbiAgICBcclxuICAgICAgICBsZXQganNvbiA9IEpTT04ucGFyc2UoYWNjZXNzVG9rZW4pO1xyXG4gICAgICAgIGxldCBzZWN1cml0eUNvbnRleHRJbml0aWFsaXplciA9IG5ldyBTZWN1cml0eUNvbnRleHRUb2tlbkluaXRpYWxpemVyKGpzb24pO1xyXG4gICAgICAgIFNlY3VyaXR5Q29udGV4dC5DdXJyZW50LkluaXQoc2VjdXJpdHlDb250ZXh0SW5pdGlhbGl6ZXIpO1xyXG4gICAgXHJcbiAgICAgICAgLy9TZWN1cml0eUNvbnRleHQuQ3VycmVudC5Vc2VyLnBlcm1pc3NvZXMuZmlsdGVyKChwZXJtaXNzYW8pID0+IHBlcm1pc3Nhby5wZXJtaXNzb2VzLnNvbWUoKHBlcm0pID0+IHBlcm0gPT0gXCJcIikpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vbGV0IG5hbWUgPSBTZWN1cml0eUNvbnRleHQuQ3VycmVudC5QcmluY2lwYWwuSWRlbnRpdHkuQ2xhaW1zLmZpbHRlcigoY2xhaW0pID0+IGNsYWltLmtleSA9PT0gXCJuYW1lXCIpWzBdLnZhbHVlO1xyXG4gICAgXHJcbiAgICAgICAgZXhwZWN0KFNlY3VyaXR5Q29udGV4dC5DdXJyZW50LlByaW5jaXBhbCkudG9CZURlZmluZWQoKTtcclxuICAgIFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGl0KCdJbml0IHNob3VsZCBoYXZlIGEgVXNlciBhdXRoZW50aWNhdGVkJywgKCkgPT4ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBqc29uID0gSlNPTi5wYXJzZShhY2Nlc3NUb2tlbik7XHJcbiAgICAgICAgbGV0IHNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyID0gbmV3IFNlY3VyaXR5Q29udGV4dFRva2VuSW5pdGlhbGl6ZXIoanNvbik7XHJcbiAgICAgICAgU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuSW5pdChzZWN1cml0eUNvbnRleHRJbml0aWFsaXplcik7XHJcbiAgICBcclxuICAgICAgICAvL1NlY3VyaXR5Q29udGV4dC5DdXJyZW50LlVzZXIucGVybWlzc29lcy5maWx0ZXIoKHBlcm1pc3NhbykgPT4gcGVybWlzc2FvLnBlcm1pc3NvZXMuc29tZSgocGVybSkgPT4gcGVybSA9PSBcIlwiKSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZXhwZWN0KFNlY3VyaXR5Q29udGV4dC5DdXJyZW50LlByaW5jaXBhbC5Jc0F1dGhlbnRpY2F0ZWQpLnRvQmVUcnV0aHkoKTtcclxuICAgIFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIFxyXG4gICAgaXQoJ1VzZXIgc2hvdWxkIGhhdmUgY2xpZW50X2lkJywgKCkgPT4ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBqc29uID0gSlNPTi5wYXJzZShhY2Nlc3NUb2tlbik7XHJcbiAgICAgICAgbGV0IHNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyID0gbmV3IFNlY3VyaXR5Q29udGV4dFRva2VuSW5pdGlhbGl6ZXIoanNvbik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuSW5pdChzZWN1cml0eUNvbnRleHRJbml0aWFsaXplcik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IGNsaWVudF9pZCA9ICg8SWRlbnRpdHk+U2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuUHJpbmNpcGFsLklkZW50aXR5KS5maW5kRmlyc3Q8c3RyaW5nPignY2xpZW50X2lkJyk7XHJcbiAgICBcclxuICAgICAgICBleHBlY3QoY2xpZW50X2lkKS50b0JlKCcyMzgwJyk7XHJcbiAgICAgICAgXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgaXQoJ1VzZXIgc2hvdWxkIG5vdCBiZSBhdXRoZW50aWNhdGVkJywgKCkgPT4ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGV4cGVjdChTZWN1cml0eUNvbnRleHQuQ3VycmVudC5QcmluY2lwYWwuSXNBdXRoZW50aWNhdGVkKS50b0JlKGZhbHNlKTtcclxuICAgIFxyXG4gICAgfSk7XHJcbn0pO1xyXG4iXX0=
