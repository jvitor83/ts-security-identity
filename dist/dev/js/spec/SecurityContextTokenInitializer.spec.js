(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../src/SecurityContext", "../src/SecurityContextTokenInitializer"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SecurityContext_1 = require("../src/SecurityContext");
    var SecurityContextTokenInitializer_1 = require("../src/SecurityContextTokenInitializer");
    describe('SecurityContextTokenInitializer', function () {
        var accessToken = "{\"iss\":\"https://pjmtsts/\",\"aud\":\"https://pjmtsts/resources\",\"exp\":1462403582,\"nbf\":1462399982,\"client_id\":\"2380\",\"scope\":[\"openid\",\"profile\",\"pjmt_profile\",\"email\",\"permissao_2380\"],\"sub\":\"16843\",\"auth_time\":1462397042,\"idp\":\"idsrv\",\"permissao|2380:Dashboard\":\"Acesso\",\"permissao|2380:Dashboard.Graficos\":\"Acesso\",\"permissao|2380:Dashboard.Graficos.Diversos\":\"Acesso\",\"permissao|2380:Dashboard.Graficos.Sobre\":\"Acesso\",\"permissao|2380:Dashboard.Relatorio.RelatorioCriacao\":\"Acesso\",\"permissao|2380:Dashboard.Relatorios.RelatorioAcessos\":[\"Acesso\",\"Alterar\",\"Excluir\",\"Novo\"],\"permissao|2380:Home\":\"Acesso\",\"permissao|2380:Noticias\":\"Acesso\",\"permissao|2380:Relatorios\":\"Acesso\",\"amr\":[\"password\"]}";
        beforeEach(function () {
            SecurityContext_1.SecurityContext.Reset();
        });
        it('Init should instantiate a User', function () {
            var json = JSON.parse(accessToken);
            var securityContextInitializer = new SecurityContextTokenInitializer_1.SecurityContextTokenInitializer(json);
            SecurityContext_1.SecurityContext.Current.Init(securityContextInitializer);
            //SecurityContext.Current.User.permissoes.filter((permissao) => permissao.permissoes.some((perm) => perm == ""));
            //let name = SecurityContext.Current.Principal.Identity.Claims.filter((claim) => claim.key === "name")[0].value;
            expect(SecurityContext_1.SecurityContext.Current.Principal).toBeDefined();
        });
        it('Init should have a User authenticated', function () {
            var json = JSON.parse(accessToken);
            var securityContextInitializer = new SecurityContextTokenInitializer_1.SecurityContextTokenInitializer(json);
            SecurityContext_1.SecurityContext.Current.Init(securityContextInitializer);
            //SecurityContext.Current.User.permissoes.filter((permissao) => permissao.permissoes.some((perm) => perm == ""));
            expect(SecurityContext_1.SecurityContext.Current.Principal.IsAuthenticated).toBeTruthy();
        });
        it('User should have client_id', function () {
            var json = JSON.parse(accessToken);
            var securityContextInitializer = new SecurityContextTokenInitializer_1.SecurityContextTokenInitializer(json);
            SecurityContext_1.SecurityContext.Current.Init(securityContextInitializer);
            var client_id = SecurityContext_1.SecurityContext.Current.Principal.Identity.findFirst('client_id');
            expect(client_id).toBe('2380');
        });
        it('User should not be authenticated', function () {
            expect(SecurityContext_1.SecurityContext.Current.Principal.IsAuthenticated).toBe(false);
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwZWMvU2VjdXJpdHlDb250ZXh0VG9rZW5Jbml0aWFsaXplci5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBQUEsMERBQXVEO0lBRXZELDBGQUF1RjtJQUV2RixRQUFRLENBQUMsaUNBQWlDLEVBQUU7UUFFeEMsSUFBTSxXQUFXLEdBQVUsK3dCQUEyckIsQ0FBQztRQUV6dEIsVUFBVSxDQUFDO1lBQ1AsaUNBQWUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRTtZQUVqQyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ25DLElBQUksMEJBQTBCLEdBQUcsSUFBSSxpRUFBK0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMzRSxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUV6RCxpSEFBaUg7WUFFakgsZ0hBQWdIO1lBRWhILE1BQU0sQ0FBQyxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUU1RCxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyx1Q0FBdUMsRUFBRTtZQUV4QyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ25DLElBQUksMEJBQTBCLEdBQUcsSUFBSSxpRUFBK0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMzRSxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUV6RCxpSEFBaUg7WUFFakgsTUFBTSxDQUFDLGlDQUFlLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUUzRSxDQUFDLENBQUMsQ0FBQztRQUdILEVBQUUsQ0FBQyw0QkFBNEIsRUFBRTtZQUU3QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ25DLElBQUksMEJBQTBCLEdBQUcsSUFBSSxpRUFBK0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUUzRSxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUV6RCxJQUFJLFNBQVMsR0FBYyxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsUUFBUyxDQUFDLFNBQVMsQ0FBUyxXQUFXLENBQUMsQ0FBQztZQUV0RyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRW5DLENBQUMsQ0FBQyxDQUFDO1FBRUgsRUFBRSxDQUFDLGtDQUFrQyxFQUFFO1lBRW5DLE1BQU0sQ0FBQyxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTFFLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoic3BlYy9TZWN1cml0eUNvbnRleHRUb2tlbkluaXRpYWxpemVyLnNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1NlY3VyaXR5Q29udGV4dH0gZnJvbSAnLi4vc3JjL1NlY3VyaXR5Q29udGV4dCc7XHJcbmltcG9ydCB7SWRlbnRpdHl9IGZyb20gJy4uL3NyYy9JZGVudGl0aWVzL0lkZW50aXR5JztcclxuaW1wb3J0IHtTZWN1cml0eUNvbnRleHRUb2tlbkluaXRpYWxpemVyfSBmcm9tICcuLi9zcmMvU2VjdXJpdHlDb250ZXh0VG9rZW5Jbml0aWFsaXplcic7XHJcblxyXG5kZXNjcmliZSgnU2VjdXJpdHlDb250ZXh0VG9rZW5Jbml0aWFsaXplcicsICgpID0+IHtcclxuICAgIFxyXG4gICAgY29uc3QgYWNjZXNzVG9rZW46c3RyaW5nID0gYHtcImlzc1wiOlwiaHR0cHM6Ly9wam10c3RzL1wiLFwiYXVkXCI6XCJodHRwczovL3BqbXRzdHMvcmVzb3VyY2VzXCIsXCJleHBcIjoxNDYyNDAzNTgyLFwibmJmXCI6MTQ2MjM5OTk4MixcImNsaWVudF9pZFwiOlwiMjM4MFwiLFwic2NvcGVcIjpbXCJvcGVuaWRcIixcInByb2ZpbGVcIixcInBqbXRfcHJvZmlsZVwiLFwiZW1haWxcIixcInBlcm1pc3Nhb18yMzgwXCJdLFwic3ViXCI6XCIxNjg0M1wiLFwiYXV0aF90aW1lXCI6MTQ2MjM5NzA0MixcImlkcFwiOlwiaWRzcnZcIixcInBlcm1pc3Nhb3wyMzgwOkRhc2hib2FyZFwiOlwiQWNlc3NvXCIsXCJwZXJtaXNzYW98MjM4MDpEYXNoYm9hcmQuR3JhZmljb3NcIjpcIkFjZXNzb1wiLFwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkLkdyYWZpY29zLkRpdmVyc29zXCI6XCJBY2Vzc29cIixcInBlcm1pc3Nhb3wyMzgwOkRhc2hib2FyZC5HcmFmaWNvcy5Tb2JyZVwiOlwiQWNlc3NvXCIsXCJwZXJtaXNzYW98MjM4MDpEYXNoYm9hcmQuUmVsYXRvcmlvLlJlbGF0b3Jpb0NyaWFjYW9cIjpcIkFjZXNzb1wiLFwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkLlJlbGF0b3Jpb3MuUmVsYXRvcmlvQWNlc3Nvc1wiOltcIkFjZXNzb1wiLFwiQWx0ZXJhclwiLFwiRXhjbHVpclwiLFwiTm92b1wiXSxcInBlcm1pc3Nhb3wyMzgwOkhvbWVcIjpcIkFjZXNzb1wiLFwicGVybWlzc2FvfDIzODA6Tm90aWNpYXNcIjpcIkFjZXNzb1wiLFwicGVybWlzc2FvfDIzODA6UmVsYXRvcmlvc1wiOlwiQWNlc3NvXCIsXCJhbXJcIjpbXCJwYXNzd29yZFwiXX1gO1xyXG4gICAgXHJcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAgIFNlY3VyaXR5Q29udGV4dC5SZXNldCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaXQoJ0luaXQgc2hvdWxkIGluc3RhbnRpYXRlIGEgVXNlcicsICgpID0+IHtcclxuICAgIFxyXG4gICAgICAgIGxldCBqc29uID0gSlNPTi5wYXJzZShhY2Nlc3NUb2tlbik7XHJcbiAgICAgICAgbGV0IHNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyID0gbmV3IFNlY3VyaXR5Q29udGV4dFRva2VuSW5pdGlhbGl6ZXIoanNvbik7XHJcbiAgICAgICAgU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuSW5pdChzZWN1cml0eUNvbnRleHRJbml0aWFsaXplcik7XHJcbiAgICBcclxuICAgICAgICAvL1NlY3VyaXR5Q29udGV4dC5DdXJyZW50LlVzZXIucGVybWlzc29lcy5maWx0ZXIoKHBlcm1pc3NhbykgPT4gcGVybWlzc2FvLnBlcm1pc3NvZXMuc29tZSgocGVybSkgPT4gcGVybSA9PSBcIlwiKSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy9sZXQgbmFtZSA9IFNlY3VyaXR5Q29udGV4dC5DdXJyZW50LlByaW5jaXBhbC5JZGVudGl0eS5DbGFpbXMuZmlsdGVyKChjbGFpbSkgPT4gY2xhaW0ua2V5ID09PSBcIm5hbWVcIilbMF0udmFsdWU7XHJcbiAgICBcclxuICAgICAgICBleHBlY3QoU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuUHJpbmNpcGFsKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgaXQoJ0luaXQgc2hvdWxkIGhhdmUgYSBVc2VyIGF1dGhlbnRpY2F0ZWQnLCAoKSA9PiB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IGpzb24gPSBKU09OLnBhcnNlKGFjY2Vzc1Rva2VuKTtcclxuICAgICAgICBsZXQgc2VjdXJpdHlDb250ZXh0SW5pdGlhbGl6ZXIgPSBuZXcgU2VjdXJpdHlDb250ZXh0VG9rZW5Jbml0aWFsaXplcihqc29uKTtcclxuICAgICAgICBTZWN1cml0eUNvbnRleHQuQ3VycmVudC5Jbml0KHNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyKTtcclxuICAgIFxyXG4gICAgICAgIC8vU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuVXNlci5wZXJtaXNzb2VzLmZpbHRlcigocGVybWlzc2FvKSA9PiBwZXJtaXNzYW8ucGVybWlzc29lcy5zb21lKChwZXJtKSA9PiBwZXJtID09IFwiXCIpKTtcclxuICAgICAgICBcclxuICAgICAgICBleHBlY3QoU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuUHJpbmNpcGFsLklzQXV0aGVudGljYXRlZCkudG9CZVRydXRoeSgpO1xyXG4gICAgXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgXHJcbiAgICBpdCgnVXNlciBzaG91bGQgaGF2ZSBjbGllbnRfaWQnLCAoKSA9PiB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IGpzb24gPSBKU09OLnBhcnNlKGFjY2Vzc1Rva2VuKTtcclxuICAgICAgICBsZXQgc2VjdXJpdHlDb250ZXh0SW5pdGlhbGl6ZXIgPSBuZXcgU2VjdXJpdHlDb250ZXh0VG9rZW5Jbml0aWFsaXplcihqc29uKTtcclxuICAgICAgICBcclxuICAgICAgICBTZWN1cml0eUNvbnRleHQuQ3VycmVudC5Jbml0KHNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyKTtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgY2xpZW50X2lkID0gKDxJZGVudGl0eT5TZWN1cml0eUNvbnRleHQuQ3VycmVudC5QcmluY2lwYWwuSWRlbnRpdHkpLmZpbmRGaXJzdDxzdHJpbmc+KCdjbGllbnRfaWQnKTtcclxuICAgIFxyXG4gICAgICAgIGV4cGVjdChjbGllbnRfaWQpLnRvQmUoJzIzODAnKTtcclxuICAgICAgICBcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBpdCgnVXNlciBzaG91bGQgbm90IGJlIGF1dGhlbnRpY2F0ZWQnLCAoKSA9PiB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZXhwZWN0KFNlY3VyaXR5Q29udGV4dC5DdXJyZW50LlByaW5jaXBhbC5Jc0F1dGhlbnRpY2F0ZWQpLnRvQmUoZmFsc2UpO1xyXG4gICAgXHJcbiAgICB9KTtcclxufSk7XHJcbiJdfQ==
