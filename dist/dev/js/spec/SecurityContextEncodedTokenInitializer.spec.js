(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../src/SecurityContext", "../src/SecurityContextEncodedTokenInitializer"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var SecurityContext_1 = require("../src/SecurityContext");
    var SecurityContextEncodedTokenInitializer_1 = require("../src/SecurityContextEncodedTokenInitializer");
    describe('SecurityContextEncodedTokenInitializer', function () {
        var accessToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJpc3MiOiJodHRwczovL3BqbXRzdHMvIiwiYXVkIjoiaHR0cHM6Ly9wam10c3RzL3Jlc291cmNlcyIsImV4cCI6MTQ2MTg4NjIzNSwibmJmIjoxNDYxODgyNjM1LCJjbGllbnRfaWQiOiIyMzgwIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsImVtYWlsIiwicGptdF9wcm9maWxlIiwicGVybWlzc2FvXzIzODAiXSwic3ViIjoiMTY4NDMiLCJhdXRoX3RpbWUiOjE0NjExNjQ5MzIsImlkcCI6Imlkc3J2IiwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkIjoiQWNlc3NvIiwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkLkdyYWZpY29zIjoiQWNlc3NvIiwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkLkdyYWZpY29zLkRpdmVyc29zIjoiQWNlc3NvIiwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkLkdyYWZpY29zLlNvYnJlIjoiQWNlc3NvIiwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkLlJlbGF0b3Jpby5SZWxhdG9yaW9DcmlhY2FvIjoiQWNlc3NvIiwicGVybWlzc2FvfDIzODA6RGFzaGJvYXJkLlJlbGF0b3Jpb3MuUmVsYXRvcmlvQWNlc3NvcyI6WyJBY2Vzc28iLCJBbHRlcmFyIiwiRXhjbHVpciIsIk5vdm8iXSwicGVybWlzc2FvfDIzODA6SG9tZSI6IkFjZXNzbyIsInBlcm1pc3Nhb3wyMzgwOk5vdGljaWFzIjoiQWNlc3NvIiwicGVybWlzc2FvfDIzODA6UmVsYXRvcmlvcyI6IkFjZXNzbyIsImFtciI6WyJwYXNzd29yZCJdfQ.Eg-bdPAHKMIDlVMiGNJxEJ9zqth2UmU-k0Ek1BIthC6WKnfyFOQ7EQXIbQGBrLhm4CHr_siwrgThAL5Nq3GJAo0_wxfjgdgt965FHZLO0Xa-QRTvfWdwCU7_jHYjlwuyJ8IDiEpQf6y6eeUIMxRI0JZa-aIrt5MtMCrMMecTdURXF91bXBFdNDJSGLpqrf687HuzUCHrrznBr6wO-5-5Y24rnpTbEclS9KDJYuTZoBQA6-Tkcy_XBHg4c1whwwORf9Nfv1c8_V6ZjML1eiqdlK7MDjqmsZbAZkScrJzZmxpoBMkvAMDIhkmB8ZVsGkrYICqtrAR6BIuTk2aK3z8low";
        var identityToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJpc3MiOiJodHRwczovL3BqbXRzdHMvIiwiYXVkIjoiMjM4MCIsImV4cCI6MTQ2MTg4MjkzNSwibmJmIjoxNDYxODgyNjM1LCJub25jZSI6IjEyMjMwMjA2NTU5NDkyMDgiLCJpYXQiOjE0NjE4ODI2MzUsImF0X2hhc2giOiIzeV9iSi1oZEZiMjE3VHNpQUVpVnZ3IiwiY19oYXNoIjoibGhMRDFOaTNkcms0aEJKYXBQRUpaQSIsInNpZCI6IjNkMGQzNWYxNGFjYWQ3MzEyM2E2Y2FmMGU5NTY5NGIzIiwic3ViIjoiMTY4NDMiLCJhdXRoX3RpbWUiOjE0NjExNjQ5MzIsImlkcCI6Imlkc3J2IiwiYW1yIjpbInBhc3N3b3JkIl19.hS9vFGcUq6j3CBRsUDm2RG0zwyNbdRijN1L_f7EmX4d5o8Wxh9RaWxPmYUSAGt211lrnp1W0zm7HfWqOu3szJnhCWKfX_P9CYuc-3NyWXxL9iMZM07lzweunJeYrWM99KCWT9il_ptR3cvNBEZPBBHBmzQ5EPbHqMga35U3U0rHTuC1134qvDFE-2YoGyNXxP5KD-pyVlx0hPXOsfv9xYfKr9C31eEMqyyavZWpmiH8Ywz1vlJTMdX6Y9Gm7599Ojqe66mRAaDX7_rf8kecgvkSZD0uozHPGIX-Y8ORPS83AHXTOFOAXoO3hvxnJJ6iN1oVJSzWVsI59VFbvMIawCw";
        beforeEach(function () {
            SecurityContext_1.SecurityContext.Reset();
        });
        it('Init should instantiate a User', function () {
            var securityContextInitializer = new SecurityContextEncodedTokenInitializer_1.SecurityContextEncodedTokenInitializer([accessToken, identityToken]);
            SecurityContext_1.SecurityContext.Current.Init(securityContextInitializer);
            //SecurityContext.Current.User.permissoes.filter((permissao) => permissao.permissoes.some((perm) => perm == ""));
            expect(SecurityContext_1.SecurityContext.Current.Principal).toBeDefined();
        });
        it('Init should have a User authenticated', function () {
            var securityContextInitializer = new SecurityContextEncodedTokenInitializer_1.SecurityContextEncodedTokenInitializer([accessToken, identityToken]);
            SecurityContext_1.SecurityContext.Current.Init(securityContextInitializer);
            expect(SecurityContext_1.SecurityContext.Current.Principal.IsAuthenticated).toBeTruthy();
        });
        it('User should have client_id', function () {
            var securityContextInitializer = new SecurityContextEncodedTokenInitializer_1.SecurityContextEncodedTokenInitializer([accessToken, identityToken]);
            SecurityContext_1.SecurityContext.Current.Init(securityContextInitializer);
            var client_id = SecurityContext_1.SecurityContext.Current.Principal.Identity.findFirst('client_id');
            expect(client_id).toBe('2380');
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwZWMvU2VjdXJpdHlDb250ZXh0RW5jb2RlZFRva2VuSW5pdGlhbGl6ZXIuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQUFBLDBEQUF1RDtJQUV2RCx3R0FBcUc7SUFFckcsUUFBUSxDQUFDLHdDQUF3QyxFQUFFO1FBRS9DLElBQU0sV0FBVyxHQUFVLGc0Q0FBZzRDLENBQUM7UUFFNTVDLElBQU0sYUFBYSxHQUFVLDAyQkFBMDJCLENBQUM7UUFHMTRCLFVBQVUsQ0FBQztZQUNQLGlDQUFlLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsZ0NBQWdDLEVBQUU7WUFFakMsSUFBSSwwQkFBMEIsR0FBRyxJQUFJLCtFQUFzQyxDQUFDLENBQUMsV0FBVyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUM7WUFDMUcsaUNBQWUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLDBCQUEwQixDQUFDLENBQUM7WUFFekQsaUhBQWlIO1lBRWpILE1BQU0sQ0FBQyxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUU1RCxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyx1Q0FBdUMsRUFBRTtZQUV4QyxJQUFJLDBCQUEwQixHQUFHLElBQUksK0VBQXNDLENBQUMsQ0FBQyxXQUFXLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQztZQUMxRyxpQ0FBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUV6RCxNQUFNLENBQUMsaUNBQWUsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBRTNFLENBQUMsQ0FBQyxDQUFDO1FBR0gsRUFBRSxDQUFDLDRCQUE0QixFQUFFO1lBRTdCLElBQUksMEJBQTBCLEdBQUcsSUFBSSwrRUFBc0MsQ0FBQyxDQUFDLFdBQVcsRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDO1lBQzFHLGlDQUFlLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1lBRXpELElBQUksU0FBUyxHQUFjLGlDQUFlLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxRQUFTLENBQUMsU0FBUyxDQUFTLFdBQVcsQ0FBQyxDQUFDO1lBRXRHLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFbkMsQ0FBQyxDQUFDLENBQUM7SUFFUCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJzcGVjL1NlY3VyaXR5Q29udGV4dEVuY29kZWRUb2tlbkluaXRpYWxpemVyLnNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1NlY3VyaXR5Q29udGV4dH0gZnJvbSAnLi4vc3JjL1NlY3VyaXR5Q29udGV4dCc7XHJcbmltcG9ydCB7SWRlbnRpdHl9IGZyb20gJy4uL3NyYy9JZGVudGl0aWVzL0lkZW50aXR5JztcclxuaW1wb3J0IHtTZWN1cml0eUNvbnRleHRFbmNvZGVkVG9rZW5Jbml0aWFsaXplcn0gZnJvbSAnLi4vc3JjL1NlY3VyaXR5Q29udGV4dEVuY29kZWRUb2tlbkluaXRpYWxpemVyJztcclxuXHJcbmRlc2NyaWJlKCdTZWN1cml0eUNvbnRleHRFbmNvZGVkVG9rZW5Jbml0aWFsaXplcicsICgpID0+IHtcclxuICAgIFxyXG4gICAgY29uc3QgYWNjZXNzVG9rZW46c3RyaW5nID0gXCJleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltRXpjazFWWjAxR2RqbDBVR05zVEdFMmVVWXpla0ZyWm5GMVJTSXNJbmcxZENJNkltRXpjazFWWjAxR2RqbDBVR05zVEdFMmVVWXpla0ZyWm5GMVJTSjkuZXlKcGMzTWlPaUpvZEhSd2N6b3ZMM0JxYlhSemRITXZJaXdpWVhWa0lqb2lhSFIwY0hNNkx5OXdhbTEwYzNSekwzSmxjMjkxY21ObGN5SXNJbVY0Y0NJNk1UUTJNVGc0TmpJek5Td2libUptSWpveE5EWXhPRGd5TmpNMUxDSmpiR2xsYm5SZmFXUWlPaUl5TXpnd0lpd2ljMk52Y0dVaU9sc2liM0JsYm1sa0lpd2ljSEp2Wm1sc1pTSXNJbVZ0WVdsc0lpd2ljR3B0ZEY5d2NtOW1hV3hsSWl3aWNHVnliV2x6YzJGdlh6SXpPREFpWFN3aWMzVmlJam9pTVRZNE5ETWlMQ0poZFhSb1gzUnBiV1VpT2pFME5qRXhOalE1TXpJc0ltbGtjQ0k2SW1sa2MzSjJJaXdpY0dWeWJXbHpjMkZ2ZkRJek9EQTZSR0Z6YUdKdllYSmtJam9pUVdObGMzTnZJaXdpY0dWeWJXbHpjMkZ2ZkRJek9EQTZSR0Z6YUdKdllYSmtMa2R5WVdacFkyOXpJam9pUVdObGMzTnZJaXdpY0dWeWJXbHpjMkZ2ZkRJek9EQTZSR0Z6YUdKdllYSmtMa2R5WVdacFkyOXpMa1JwZG1WeWMyOXpJam9pUVdObGMzTnZJaXdpY0dWeWJXbHpjMkZ2ZkRJek9EQTZSR0Z6YUdKdllYSmtMa2R5WVdacFkyOXpMbE52WW5KbElqb2lRV05sYzNOdklpd2ljR1Z5YldsemMyRnZmREl6T0RBNlJHRnphR0p2WVhKa0xsSmxiR0YwYjNKcGJ5NVNaV3hoZEc5eWFXOURjbWxoWTJGdklqb2lRV05sYzNOdklpd2ljR1Z5YldsemMyRnZmREl6T0RBNlJHRnphR0p2WVhKa0xsSmxiR0YwYjNKcGIzTXVVbVZzWVhSdmNtbHZRV05sYzNOdmN5STZXeUpCWTJWemMyOGlMQ0pCYkhSbGNtRnlJaXdpUlhoamJIVnBjaUlzSWs1dmRtOGlYU3dpY0dWeWJXbHpjMkZ2ZkRJek9EQTZTRzl0WlNJNklrRmpaWE56YnlJc0luQmxjbTFwYzNOaGIzd3lNemd3T2s1dmRHbGphV0Z6SWpvaVFXTmxjM052SWl3aWNHVnliV2x6YzJGdmZESXpPREE2VW1Wc1lYUnZjbWx2Y3lJNklrRmpaWE56YnlJc0ltRnRjaUk2V3lKd1lYTnpkMjl5WkNKZGZRLkVnLWJkUEFIS01JRGxWTWlHTkp4RUo5enF0aDJVbVUtazBFazFCSXRoQzZXS25meUZPUTdFUVhJYlFHQnJMaG00Q0hyX3Npd3JnVGhBTDVOcTNHSkFvMF93eGZqZ2RndDk2NUZIWkxPMFhhLVFSVHZmV2R3Q1U3X2pIWWpsd3V5SjhJRGlFcFFmNnk2ZWVVSU14UkkwSlphLWFJcnQ1TXRNQ3JNTWVjVGRVUlhGOTFiWEJGZE5ESlNHTHBxcmY2ODdIdXpVQ0hycnpuQnI2d08tNS01WTI0cm5wVGJFY2xTOUtESll1VFpvQlFBNi1Ua2N5X1hCSGc0YzF3aHd3T1JmOU5mdjFjOF9WNlpqTUwxZWlxZGxLN01EanFtc1piQVprU2NySnpabXhwb0JNa3ZBTURJaGttQjhaVnNHa3JZSUNxdHJBUjZCSXVUazJhSzN6OGxvd1wiO1xyXG4gICAgXHJcbiAgICBjb25zdCBpZGVudGl0eVRva2VuOnN0cmluZyA9IFwiZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJbUV6Y2sxVlowMUdkamwwVUdOc1RHRTJlVVl6ZWtGclpuRjFSU0lzSW5nMWRDSTZJbUV6Y2sxVlowMUdkamwwVUdOc1RHRTJlVVl6ZWtGclpuRjFSU0o5LmV5SnBjM01pT2lKb2RIUndjem92TDNCcWJYUnpkSE12SWl3aVlYVmtJam9pTWpNNE1DSXNJbVY0Y0NJNk1UUTJNVGc0TWprek5Td2libUptSWpveE5EWXhPRGd5TmpNMUxDSnViMjVqWlNJNklqRXlNak13TWpBMk5UVTVORGt5TURnaUxDSnBZWFFpT2pFME5qRTRPREkyTXpVc0ltRjBYMmhoYzJnaU9pSXplVjlpU2kxb1pFWmlNakUzVkhOcFFVVnBWblozSWl3aVkxOW9ZWE5vSWpvaWJHaE1SREZPYVROa2NtczBhRUpLWVhCUVJVcGFRU0lzSW5OcFpDSTZJak5rTUdRek5XWXhOR0ZqWVdRM016RXlNMkUyWTJGbU1HVTVOVFk1TkdJeklpd2ljM1ZpSWpvaU1UWTRORE1pTENKaGRYUm9YM1JwYldVaU9qRTBOakV4TmpRNU16SXNJbWxrY0NJNkltbGtjM0oySWl3aVlXMXlJanBiSW5CaGMzTjNiM0prSWwxOS5oUzl2RkdjVXE2ajNDQlJzVURtMlJHMHp3eU5iZFJpak4xTF9mN0VtWDRkNW84V3hoOVJhV3hQbVlVU0FHdDIxMWxybnAxVzB6bTdIZldxT3Uzc3pKbmhDV0tmWF9QOUNZdWMtM055V1h4TDlpTVpNMDdsendldW5KZVlyV005OUtDV1Q5aWxfcHRSM2N2TkJFWlBCQkhCbXpRNUVQYkhxTWdhMzVVM1UwckhUdUMxMTM0cXZERkUtMllvR3lOWHhQNUtELXB5Vmx4MGhQWE9zZnY5eFlmS3I5QzMxZUVNcXl5YXZaV3BtaUg4WXd6MXZsSlRNZFg2WTlHbTc1OTlPanFlNjZtUkFhRFg3X3JmOGtlY2d2a1NaRDB1b3pIUEdJWC1ZOE9SUFM4M0FIWFRPRk9BWG9PM2h2eG5KSjZpTjFvVkpTeldWc0k1OVZGYnZNSWF3Q3dcIjtcclxuICAgIFxyXG4gICAgXHJcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAgIFNlY3VyaXR5Q29udGV4dC5SZXNldCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaXQoJ0luaXQgc2hvdWxkIGluc3RhbnRpYXRlIGEgVXNlcicsICgpID0+IHtcclxuICAgIFxyXG4gICAgICAgIGxldCBzZWN1cml0eUNvbnRleHRJbml0aWFsaXplciA9IG5ldyBTZWN1cml0eUNvbnRleHRFbmNvZGVkVG9rZW5Jbml0aWFsaXplcihbYWNjZXNzVG9rZW4sIGlkZW50aXR5VG9rZW5dKTtcclxuICAgICAgICBTZWN1cml0eUNvbnRleHQuQ3VycmVudC5Jbml0KHNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyKTtcclxuICAgIFxyXG4gICAgICAgIC8vU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuVXNlci5wZXJtaXNzb2VzLmZpbHRlcigocGVybWlzc2FvKSA9PiBwZXJtaXNzYW8ucGVybWlzc29lcy5zb21lKChwZXJtKSA9PiBwZXJtID09IFwiXCIpKTtcclxuICAgIFxyXG4gICAgICAgIGV4cGVjdChTZWN1cml0eUNvbnRleHQuQ3VycmVudC5QcmluY2lwYWwpLnRvQmVEZWZpbmVkKCk7XHJcbiAgICBcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBpdCgnSW5pdCBzaG91bGQgaGF2ZSBhIFVzZXIgYXV0aGVudGljYXRlZCcsICgpID0+IHtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgc2VjdXJpdHlDb250ZXh0SW5pdGlhbGl6ZXIgPSBuZXcgU2VjdXJpdHlDb250ZXh0RW5jb2RlZFRva2VuSW5pdGlhbGl6ZXIoW2FjY2Vzc1Rva2VuLCBpZGVudGl0eVRva2VuXSk7XHJcbiAgICAgICAgU2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuSW5pdChzZWN1cml0eUNvbnRleHRJbml0aWFsaXplcik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZXhwZWN0KFNlY3VyaXR5Q29udGV4dC5DdXJyZW50LlByaW5jaXBhbC5Jc0F1dGhlbnRpY2F0ZWQpLnRvQmVUcnV0aHkoKTtcclxuICAgIFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIFxyXG4gICAgaXQoJ1VzZXIgc2hvdWxkIGhhdmUgY2xpZW50X2lkJywgKCkgPT4ge1xyXG4gICAgXHJcbiAgICAgICAgbGV0IHNlY3VyaXR5Q29udGV4dEluaXRpYWxpemVyID0gbmV3IFNlY3VyaXR5Q29udGV4dEVuY29kZWRUb2tlbkluaXRpYWxpemVyKFthY2Nlc3NUb2tlbiwgaWRlbnRpdHlUb2tlbl0pO1xyXG4gICAgICAgIFNlY3VyaXR5Q29udGV4dC5DdXJyZW50LkluaXQoc2VjdXJpdHlDb250ZXh0SW5pdGlhbGl6ZXIpO1xyXG4gICAgXHJcbiAgICAgICAgbGV0IGNsaWVudF9pZCA9ICg8SWRlbnRpdHk+U2VjdXJpdHlDb250ZXh0LkN1cnJlbnQuUHJpbmNpcGFsLklkZW50aXR5KS5maW5kRmlyc3Q8c3RyaW5nPignY2xpZW50X2lkJyk7XHJcbiAgICBcclxuICAgICAgICBleHBlY3QoY2xpZW50X2lkKS50b0JlKCcyMzgwJyk7XHJcbiAgICAgICAgXHJcbiAgICB9KTtcclxuICAgIFxyXG59KTtcclxuIl19
